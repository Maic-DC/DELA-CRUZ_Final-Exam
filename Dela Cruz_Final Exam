import java.util.Stack;

class Creature {    // class to represent a Creatures with Name and Power level
    String name;
    int powerLevel;

    public Creature(String name, int powerLevel) { 
        this.name = name;
        this.powerLevel = powerLevel;
    }

    @Override
    public String toString() {
        return name + " - " + powerLevel;
    }
}

public class CreatureOrganizer {

    // Bubble Sort - Descending order of power levels
    public static void BubbleSortDescending(Creature[] creatures) {
        int n = creatures.length;
        for (int i = 0; i < n - 1; i++) {
            for (int j = 0; j < n - i - 1; j++) {
                if (creatures[j].powerLevel < creatures[j + 1].powerLevel) {
                    // Swap
                    Creature temp = creatures[j];
                    creatures[j] = creatures[j + 1];
                    creatures[j + 1] = temp;
                }
            }
        }
    }

    // Selection Sort - Ascending order of Power levels
    public static void SelectionSortAscending(Creature[] creatures) {
        int n = creatures.length;
        for (int i = 0; i < n - 1; i++) {
            int minIndex = i;
            for (int j = i + 1; j < n; j++) {
                if (creatures[j].powerLevel < creatures[minIndex].powerLevel) {
                    minIndex = j;
                }
            }
            // Swap
            Creature temp = creatures[minIndex];
            creatures[minIndex] = creatures[i];
            creatures[i] = temp;
        }
    }

    // Display the Creatures Array
    public static void displayCreatures(Creature[] creatures) {
        for (Creature creature : creatures) {
            System.out.println(creature);
        }
    }

    // Stack Implementation: Push and Pop creatures
    public static void StackDisplay(Creature[] creatures) {
        Stack<Creature> stack = new Stack<>();

        // Push all creatures into the Stack
        for (Creature creature : creatures) {
            stack.push(creature);
        }

        // Pop and Display creatures
        System.out.println("\n*** Stack Implementation: Popping Creatures ***");
        while (!stack.isEmpty()) {
            Creature popped = stack.pop();
            System.out.println("Popped: " + popped);
        }
    }

    public static void main(String[] args) {
        // Fixed input data
        Creature[] creatures = {
            new Creature("Dragon", 95),
            new Creature("Griffin", 88),
            new Creature("Unicorn", 78),
            new Creature("Phoenix", 92),
            new Creature("Centaur", 85)
        };
        
         // Bubble Sort - Ascending order
        Creature[] CreaturesForBubbleSort = {
            new Creature("Dragon", 95),
            new Creature("Phoenix", 92),
            new Creature("Griffin", 88),
            new Creature("Centaur", 85),
            new Creature("Unicorn", 78)
        };

        // Bubble Sort - Descending Order
        BubbleSortDescending(CreaturesForBubbleSort);
        System.out.println("*** Bubble Sort: Descending Order by Power Level ***");
        displayCreatures(CreaturesForBubbleSort);

        // Selection Sort - Ascending Order
        SelectionSortAscending(creatures);
        System.out.println("\n*** Selection Sort: Ascending Order by Power Level ***");
        displayCreatures(creatures);

        // Use Stack to display in Ascending Order
        System.out.println();
        StackDisplay(creatures);
    }
}
